class Node {
    int data;
    Node next;

    public Node(int data) {
        this.data = data;
        this.next = null;
    }
}

public class CustomLinkedList {
    private Node head;

    public void add(int X) {
        Node newNode = new Node(X);
        if (head == null) {
            head = newNode;
        } else {
            Node current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newNode;
        }
    }

    public int find(int X) {
        Node current = head;
        int position = 0;
        while (current != null) {
            if (current.data == X) {
                return position;
            }
            current = current.next;
            position++;
        }
        return -1;
    }

    public String toString() {
        StringBuilder result = new StringBuilder();
        Node current = head;
        while (current != null) {
            result.append(current.data).append(", ");
            current = current.next;
        }
        return result.length() > 0 ? result.substring(0, result.length() - 2) : "";
    }

    public boolean isSorted() {
        Node current = head;
        while (current != null && current.next != null) {
            if (current.data > current.next.data) {
                return false;
            }
            current = current.next;
        }
        return true;
    }

    public static void main(String[] args) {
        CustomLinkedList myList = new CustomLinkedList();
        myList.add(5);
        myList.add(2);
        myList.add(8);
        myList.add(1);

        System.out.println("LinkedList: " + myList.toString());
        System.out.println("Position of 8: " + myList.find(8));
        System.out.println("Position of 3: " + myList.find(3));
        System.out.println("Is Sorted: " + myList.isSorted());
    }
}
